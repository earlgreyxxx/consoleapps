<#@ include file="ParseXmlFile.tt" #>namespace <#= Database.NameSpace #>
{
<#
    SqlConnectionStringBuilder stringBuilder = new();
    stringBuilder.DataSource = Database.DataSource;
    stringBuilder.InitialCatalog = Database.InitialCatalog;
    stringBuilder.UserID = Database.UserID;
    stringBuilder.Password = Database.Password;
    stringBuilder.TrustServerCertificate = true;

    using(var conn = new SqlConnection(stringBuilder.ConnectionString))
    {
      conn.Open();
      foreach(var q in Model.Queries)
      {
        string className = q.ClassName;
        string queryString = Regex.Replace(q.QueryString.Trim(),@"\s{2,}"," ");
        SqlCommand cmd = new(queryString, conn);
        var dataAdapter = new SqlDataAdapter(cmd);
        DataSet dataset = new();
        dataAdapter.FillSchema(dataset,SchemaType.Source);
        if(dataset.Tables.Count <= 0)
          continue;

        var datatable = dataset.Tables[0];
#>
  /// <summary>
  /// 自動生成されたクラス
  /// </summary>
  internal class <#= className #>
  {
    // statics
    // -------------------------------------------------------------
    public static string SQL { get; } = @"<#= queryString #>";
    public static bool ReadOnly { get; } = true;

    // instances
    // -------------------------------------------------------------
<#
    foreach(DataColumn column in datatable.Columns)
    {
      string propName = column.Caption.Contains('-') ? column.Caption.Replace("-",string.Empty) : column.Caption;
#>
    public <#= column.DataType.Name #>? <#= propName #> { set; get; }
<#
    }
#>
  }
<#
      }
    }
#>
}
